<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        7fBpeU5/MN/lO+yoGbPrshk3rPjzoufv3XfwULmmG0dKdWuXVDzTld10ejAY/Pb7H+zxLvjT3+6+8ba7
        Fo6ru2yDq2bsriLf8ENDvbVNeaXVrZkWXzCjpDyUZfOHsm3lijeUXeLTMks8ctVyLcvqZcmSJUuWvbyU
        yaDG7oJPyTLR3wtLn5atljlWv5ZjKz/qMs/h1/IdVcYy1+YLyTSWHGt5KNfqDeaVVrYOdFc2FlYO3+sb
        e+GWidOmr7n35w/OW7Zm3fUHDn00NKRpX1ddcWpcZ/SI6coe6hcKaV893NCYv/mtd8b+5Z/P33r/Q798
        9OqZtyycOPXa1aPqLnu94rzvveMZOX6bnGbZM/y8nUJCqHTY2PeEs2bM+xGOqlG7TVWO/MCU2WP7ArP3
        csKM2oO+xV458kMAvcfs32XPmH0mJ8pse8dT4s/jbBf9+pzqu0yUqu9ue0Xt+87q0e/Jd3tZzZhd7pox
        O9R3/rbKsRO2jKm79NXJV82on3n7vc888ptZDzy/YtV1u3bvqWhube2f6LltusN05TGSIaUzNE37Smtb
        29kfHW4o2rHr/WGvvvGfCete2nTJ6hdevGLF2vVXLl+z7qplq9devXTVmulLV62+pn7lqhliyYpV1y5Z
        sfK6iMXLV16fqOif6yTbC4s8hzl5DcnA7LX1XPT7Ty5m/6+Ol1X4JPLvBThO1OfvDcnM7DUnxOzfTgLq
        1WfciWD2XD0S//6i33MUs9/l4mUrYrQ/VrZhvO/lq9fOUK5RpitXr1y7ftq6DS9N3fjqa5P//ebb4/bs
        3e9tDDTnB0Ohb6moOUv1Qo/n2HwS05XHmVzG/DTls8oZ7WRGdLzPJQmz13Yimb0GAAD6qvjvOfnelwaQ
        mJHdT8c0tyZRpisBAAD6MtOVAAAAfZf+mf8HYPJDEK6DHVQAAAAASUVORK5CYII=
</value>
  </data>
</root>